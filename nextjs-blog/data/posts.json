[
    {
        "title": "History of C Programming Language.",
        "date": "2025-09-15",
        "contentHtml": "<p>C is a procedural general-purpose programming language that was originally created by Dennis Ritchie in 1972 in Bell Laboratories of AT&T Labs. It was originally intended as a system programming language to implement the UNIX system. C has become one of the world's most influential programming languages that is universally applied in a variety of applications owing to being memory-efficient, being able to provide low-level control, and being portable.</p><h2>Historical Development of C</h2><p>C was developed to overcome the limitations of languages like B and BCPL. These languages had no real data typing capability, and their structured programming was on the primitive side. Dennis Ritchie began programming in C in 1972, as an effort to make UNIX both more portable and more functional. By 1973, the UNIX operating system was virtually rewritten in C, and we had complete system programming working in C.</p><p>Dennis Ritchie and Brian Kernighan published The C Programming Language, now referred to as the 'K&R' book. It established the de facto standard for the C language. In that book, Ritchie and Kernighan defined C's syntax and semantics, also called 'K&R C'.</p>",
        "sourceURL": "https://www.geeksforgeeks.org/c/history-and-application-of-c/",
        "id": 1
    },
    {
        "title": "Linux and Unix, short introduction.",
        "date": "2025-09-14",
        "contentHtml": "<h2>Unix</h2><p>The Unix operating system got its start in 1969 at Bell Laboratories and was written in assembly language. In 1973, Ken Thompson and Dennis Ritchie succeeded in rewriting Unix in their new language C. This was quite an audacious move; at the time, system programming was done in assembly in order to extract maximum performance from the hardware. The concept of a portable operating system was barely a gleam in anyone's eye.</p><p>The creation of a portable operating system was very significant in the computing industry, but then came the problem of licensing each type of Unix. Richard Stallman, an American software freedom activist and programmer recognized a need for open source solutions and launched the GNU project in 1983, later founding the Free Software Foundation. His goal was to create a completely free and open source operating system that was Unix-compatible or Unix-like.</p><h2>Linux</h2><p>In 1987, the source code to a minimalistic Unix-like operating system called MINIX was released by Andrew Tanenbaum, a professor at Vrije Universiteit, for academic purposes. Linus Torvalds began developing a new operating system based on MINIX while a student at the University of Helsinki in 1991. In September of 1991, Torvalds released the first version (0.1) of the Linux kernel.</p><p>Torvalds greatly enhanced the open source community by releasing the Linux kernel under the GNU General Public License so that everyone has access to the source code and can freely make modifications to it. Many components from the GNU project, such as the GNU Core Utilities, were then integrated with the Linux kernel, thus completing the first free and open source operating system.</p><p>Linux has been adapted to a variety of computer systems of many sizes and purposes. Furthermore, different variants of Linux (called Linux distributions) have been developed over time to meet various needs. There are now hundreds of different Linux distributions available, with a wide variety of features. The most popular operating system in the world is actually Android, which is built on the Linux kernel.</p></br><ol><h3>Some choices of Linux Distributions</h3><li>Linux Mint</li><li>Ubuntu</li><li>Arch Linux</li><li>Alma Linux</li><li>RedHat Linux</li></ol>",
        "sourceURL": "https://cvw.cac.cornell.edu/linux/intro/history",
        "id": 2
    },
    {
        "title": "Short history of Python programming language.",
        "date": "2025-09-13",
        "contentHtml": "<p>Python is a widely used general-purpose, high-level programming language. It was initially designed by Guido van Rossum in 1991 and developed by Python Software Foundation. It was mainly developed to emphasize code readability, and its syntax allows programmers to express concepts in fewer lines of code.</p><h2>Who Invented Python?</h2><p>In the late 1980s, history was about to be written. It was that time when working on Python started. Soon after that, Guido Van Rossum began doing its application-based work in December of 1989 at Centrum Wiskunde & Informatica (CWI) which is situated in the Netherlands. It was started as a hobby project because he was looking for an interesting project to keep him occupied during Christmas.</p><p>The programming language in which Python is said to have succeeded is ABC Programming Language, which had interfacing with the Amoeba Operating System and had the feature of exception handling. He had already helped create ABC earlier in his career and had seen some issues with ABC but liked most of the features. After that what he did was very clever. He had taken the syntax of ABC, and some of its good features. It came with a lot of complaints too, so he fixed those issues completely and created a good scripting language that had removed all the flaws.</p><h2>Why Python called Python?</h2><p>The inspiration for the name came from the BBC's TV Show - ' Monty Python's Flying Circus' , as he was a big fan of the TV show and also he wanted a short, unique and slightly mysterious name for his invention and hence he named it Python! He was the 'Benevolent dictator for life' (BDFL) until he stepped down from the position as the leader on 12th July 2018. For quite some time he used to work for Google, but currently, he is working at Dropbox.</p><h2>Evolution of Python</h2><p>The language was finally released in 1991. When it was released, it used a lot fewer codes to express the concepts, when we compare it with Java , C++ & C . Its design philosophy was quite good too. Its main objective is to provide code readability and advanced developer productivity. When it was released, it had more than enough capability to provide classes with inheritance, several core data types of exception handling and functions.</p><p>Following are the illustrations of different versions of Python along with the timeline.</p>",
        "sourceURL": "https://www.geeksforgeeks.org/python/history-of-python/",
        "id": 3
    }
]